#include <bits/stdc++.h>
using namespace std;

int main() {
    int key[]={10,20, 30, 40 ,50};
    int freq[]={2,5,4,3,6};
    int n= sizeof(key)/sizeof(int);
    int dp[n][n];
    memset(dp,0,sizeof(dp));
    for(int i=0;i<n;i++){
        dp[i][i]=freq[i];
    }
    int* prefixsum= new int[n];
    prefixsum[0]=freq[0];
    for(int i=1;i<n;i++){
        prefixsum[i]=freq[i]+prefixsum[i-1];
    }
    dp[0][1]=prefixsum[1]+min(dp[0][0], dp[1][1]);
    for(int i=1;i<n-1;i++){
        dp[i][i+1]=(prefixsum[i+1]-prefixsum[i-1])+min(dp[i][i], dp[i+1][i+1]);
    }
    for(int gap=2;gap<n;gap++){
        for(int i=0;i<n-gap;i++){
            int j= i+gap;
            int temp=INT_MAX;
           int a;
            for(int k=i;k<=j;k++){
                if(k==i){
                   a=dp[i+1][j];
                }
               int c=(((k>i)?dp[i][k-1]:0)+((k<j)?dp[k+1][j]:0));
                temp= min(temp, min(a,c));
            }
            if(i-1>=0){
            dp[i][j]=(prefixsum[j]-prefixsum[i-1])+temp;
            }
            else{
                  dp[i][j]=(prefixsum[j])+temp;
            }
        }
    }
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            cout<<dp[i][j]<<" ";
        }
        cout<<endl;
    }
    cout<<dp[0][n-1];
	return 0;
}
